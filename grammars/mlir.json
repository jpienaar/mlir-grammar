{
   "fileTypes":[
      "mlir"
   ],
   "repository":{
      "comment":{
         "match":"\/\/.*$",
         "name":"comment.line.double-slash.mlir"
      },
      "identifier":{
         "match":"[\\%#@][a-zA-Z0-9][\\w\\d_]*",
         "captures":{
            "0":{
               "name":"variable.mlir"
            }
         },
         "name":"meta.identifier.mlir"
      },
      "integer":{
         "match":"[\\Wx]([0-9]+)",
         "captures":{
            "1":{
               "name":"constant.numeric.mlir"
            }
         },
         "name":"meta.identifier.mlir"
      },
      "string":{
         "end":"\"",
         "begin":"\"",
         "beginCaptures":{
            "0":{
               "name":"punctuation.definition.string.begin.mlir"
            }
         },
         "patterns":[
            {
               "match":"\\\\[nt\"]",
               "name":"constant.character.escape.mlir"
            },
            {
               "match":"\\\\.",
               "name":"invalid.illegal.mlir"
            }
         ],
         "endCaptures":{
            "0":{
               "name":"punctuation.definition.string.end.mlir"
            }
         },
         "name":"string.quoted.double.mlir"
      },
      "types":{
         "match":"[\\Wx](index|i[1-9][0-9]*|f16|bf16|f32|f64|memref|tensor)\\b",
         "captures":{
            "1":{
               "name":"storage.type.mlir"
            }
         },
         "name":"meta.types.simple.mlir"
      }
   },
   "patterns":[
      {
         "include":"#comment"
      },
      {
         "include":"#string"
      },
      {
         "include":"#types"
      },
      {
         "match":"\\b(func)\\b",
         "name":"keyword.module.mlir"
      },
      {
         "match":"\\b(attributes|call|constant|loc|return)\\b",
         "name":"keyword.module.mlir"
      },
      {
         "include":"#identifier"
      },
      {
         "include":"#integer"
      }
   ],
   "name":"MLIR",
   "scopeName":"source.mlir"
}
